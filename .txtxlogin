import React from 'react'
import Button from 'react-bootstrap/Button';
import Col from 'react-bootstrap/Col';
import Form from 'react-bootstrap/Form';
import Row from 'react-bootstrap/Row';
import { useFormik } from 'formik';
import * as Yup from 'yup';

const LeaveForm = () => {
    const formik = useFormik({
        initialValues: {
            leaveType: '',
            startDate: '',
            endDate: '',
            reason: ''
        },
        validationSchema: Yup.object({
            leaveType: Yup.string()
                .required('Leave type is required'),

            startDate: Yup.date()
                .required('Start date is required'),
            endDate: Yup.date()
                .required('End date is required')
                .min('End date cannot be before start date'),
            reason: Yup.string()
                .min(10, 'Must be at least 10 characters')
                .required('Reason is required')
        }),

    });
    return (
        <div className='main-content'>
            <div className='form-container'>
                <Form className='p-4' onSubmit={formik.handleSubmit}>
                    <h1 className='Add'>Apply Leave</h1>
                    <Row className="mb-4">
                        <Form.Group as={Col} controlId="formGridFirstName">
                            <Form.Label>Leave Type</Form.Label>
                            <Form.Select
                                onChange={formik.handleChange}
                                name="leaveType"
                                onBlur={formik.handleBlur}
                                value={formik.values.leaveType}
                                isInvalid={formik.touched.leaveType && formik.errors.leaveType}>

                                <option>Choose...</option>
                                <option>Sick Leave</option>
                                <option>Casual Leave</option>
                                <option>Paid Leave</option>
                            </Form.Select>
                            {(formik.errors.leaveType && formik.touched.leaveType) ? <span className='text-danger' style={{ fontSize: 12 }} >{formik.errors.leaveType}</span> : null}
                        </Form.Group>
                    </Row>
                    <Row className="mb-4">
                        <Form.Group as={Col} controlId="formGridLastName">
                            <Form.Label>Start Date</Form.Label>
                            <Form.Control
                                type="date"
                                placeholder="Start Date"
                                onChange={formik.handleChange}
                                name="startDate"
                                onBlur={formik.handleBlur}
                                value={formik.values.startDate}
                                isInvalid={formik.touched.startDate && formik.errors.startDate}
                            />
                            {(formik.errors.startDate && formik.touched.startDate) ? <span className='text-danger' style={{ fontSize: 12 }} >{formik.errors.startDate}</span> : null}
                        </Form.Group>
                        <Form.Group as={Col} controlId="formGridLastName">
                            <Form.Label>End Date</Form.Label>
                            <Form.Control
                                type="date"
                                placeholder="End Date"
                                onChange={formik.handleChange}
                                name="endDate"
                                onBlur={formik.handleBlur}
                                value={formik.values.endDate}
                                isInvalid={formik.touched.endDate && formik.errors.endDate}
                            />
                            {(formik.errors.endDate && formik.touched.endDate) ? <span className='text-danger' style={{ fontSize: 12 }} >{formik.errors.endDate}</span> : null}
                        </Form.Group>
                    </Row>
                    <Row className="mb-4">
                        <Form.Group as={Col} controlId="formGridLastName">
                            <Form.Label>Reason</Form.Label>
                            <Form.Control 
                            as="textarea" 
                            rows={3} 
                            placeholder="Reason for Leave" 
                            onChange={formik.handleChange}
                            name="reason"
                            onBlur={formik.handleBlur}
                            value={formik.values.reason}
                            isInvalid={formik.touched.reason && formik.errors.reason}
                            />
                            {(formik.errors.reason && formik.touched.reason) ? <span className='text-danger' style={{ fontSize: 12 }} >{formik.errors.reason}</span> : null}
                        </Form.Group>
                    </Row>
                    <Button className='btn1 w-100' variant="primary" type="submit">
                        Apply
                    </Button>
                </Form>
            </div>

        </div>
    )
}

export default LeaveForm
    